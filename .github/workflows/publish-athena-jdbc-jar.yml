name: Publish athena-jdbc jar to S3

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - '.gitpod.yml'
    branches: [ main ]
    types: [ ready_for_review, opened, synchronize, reopened, labeled ]
  workflow_dispatch:
    branches:
      - '**'

# Environment variables can be overridden in .github/env
env:
  MAIN_PREFIX: main
  GITHUB_TOKEN: ${{ secrets.ENG_STD_TOKEN }}
  VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
  VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
  VPN_AUTH_CODE: ${{ secrets.VPN_AUTH_CODE }}
  VPN_CLIENT_VERSION: 9.3.5-4367
  AWS_REGION: us-east-1

jobs:
  publish-jar:
    name: Publish athena-jdbc jar to S3
    if: github.repository == 'trilogy-group/aws-athena-query-federation'
    runs-on: ubuntu-latest
    steps:
      - name: Check AWS settings
        env:
          MANAGED_AWS_ACCESS_KEY_ID: ${{ secrets.DEVFLOWS_ITEST_AWS_ACCESS_KEY_ID }}
          MANAGED_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEVFLOWS_ITEST_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          #DEVFLOWS_AWS_ACCESS_KEY_ID: ${{ secrets.DEVFLOWS_AWS_ACCESS_KEY_ID }}
          #DEVFLOWS_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEVFLOWS_AWS_SECRET_ACCESS_KEY }}
          #MANAGED_LAMBDA_AWS_ACCESS_KEY_ID: ${{ secrets.MANAGED_LAMBDA_AWS_ACCESS_KEY_ID }}
          #MANAGED_LAMBDA_AWS_SECRET_ACCESS_KEY: ${{ secrets.MANAGED_LAMBDA_AWS_SECRET_ACCESS_KEY }}
        if: |
          env.MANAGED_AWS_ACCESS_KEY_ID == null ||
          env.MANAGED_AWS_SECRET_ACCESS_KEY == null
          #env.DEVFLOWS_AWS_ACCESS_KEY_ID == null ||
          #env.DEVFLOWS_AWS_SECRET_ACCESS_KEY == null ||
          #env.MANAGED_LAMBDA_AWS_ACCESS_KEY_ID == null ||
          #env.MANAGED_LAMBDA_AWS_SECRET_ACCESS_KEY == null
        run: echo "::error ::AWS is not setup, see https://git.io/JYm77"; exit 1
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        uses: trilogy-group/action-npm-install-dependencies@v1
      - name: Build
        run: npm run build
      - name: Configure Managed AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVFLOWS_ITEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVFLOWS_ITEST_AWS_SECRET_ACCESS_KEY }}
          #aws-access-key-id: ${{ secrets.MANAGED_LAMBDA_AWS_ACCESS_KEY_ID }}
          #aws-secret-access-key: ${{ secrets.MANAGED_LAMBDA_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Compute Tag
        run: |
          SHA=`echo ${GITHUB_SHA} | cut -c1-7`
          echo "IMAGE_TAG=$(echo ${GITHUB_REF#refs/heads/}-${SHA} | sed "s/[^[:alnum:]]/-/g")" >> $GITHUB_ENV
      - name: Publish jar
        run: |
          chmod 755 ./.github/scripts/publish-athena-jdbc-jar.sh
          ./.github/scripts/publish-athena-jdbc-jar.sh
